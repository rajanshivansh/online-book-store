/*
 * This file is generated by jOOQ.
 */
package com.onlinebookstore.model.tables.records;


import com.onlinebookstore.model.tables.PurchaseHistory;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurchaseHistoryRecord extends UpdatableRecordImpl<PurchaseHistoryRecord> implements Record3<String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>onlinebookstore.purchase_history.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>onlinebookstore.purchase_history.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>onlinebookstore.purchase_history.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>onlinebookstore.purchase_history.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>onlinebookstore.purchase_history.customer_id</code>.
     */
    public void setCustomerId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>onlinebookstore.purchase_history.customer_id</code>.
     */
    public String getCustomerId() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return PurchaseHistory.PURCHASE_HISTORY.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PurchaseHistory.PURCHASE_HISTORY.DATE;
    }

    @Override
    public Field<String> field3() {
        return PurchaseHistory.PURCHASE_HISTORY.CUSTOMER_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getDate();
    }

    @Override
    public String component3() {
        return getCustomerId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getDate();
    }

    @Override
    public String value3() {
        return getCustomerId();
    }

    @Override
    public PurchaseHistoryRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public PurchaseHistoryRecord value2(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public PurchaseHistoryRecord value3(String value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public PurchaseHistoryRecord values(String value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PurchaseHistoryRecord
     */
    public PurchaseHistoryRecord() {
        super(PurchaseHistory.PURCHASE_HISTORY);
    }

    /**
     * Create a detached, initialised PurchaseHistoryRecord
     */
    public PurchaseHistoryRecord(String id, LocalDateTime date, String customerId) {
        super(PurchaseHistory.PURCHASE_HISTORY);

        setId(id);
        setDate(date);
        setCustomerId(customerId);
    }
}
