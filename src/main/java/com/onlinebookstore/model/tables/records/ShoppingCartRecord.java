/*
 * This file is generated by jOOQ.
 */
package com.onlinebookstore.model.tables.records;


import com.onlinebookstore.model.tables.ShoppingCart;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShoppingCartRecord extends UpdatableRecordImpl<ShoppingCartRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>onlinebookstore.shopping_cart.count</code>.
     */
    public void setCount(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>onlinebookstore.shopping_cart.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>onlinebookstore.shopping_cart.customer_id</code>.
     */
    public void setCustomerId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>onlinebookstore.shopping_cart.customer_id</code>.
     */
    public String getCustomerId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>onlinebookstore.shopping_cart.book_id</code>.
     */
    public void setBookId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>onlinebookstore.shopping_cart.book_id</code>.
     */
    public Integer getBookId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ShoppingCart.SHOPPING_CART.COUNT;
    }

    @Override
    public Field<String> field2() {
        return ShoppingCart.SHOPPING_CART.CUSTOMER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ShoppingCart.SHOPPING_CART.BOOK_ID;
    }

    @Override
    public Integer component1() {
        return getCount();
    }

    @Override
    public String component2() {
        return getCustomerId();
    }

    @Override
    public Integer component3() {
        return getBookId();
    }

    @Override
    public Integer value1() {
        return getCount();
    }

    @Override
    public String value2() {
        return getCustomerId();
    }

    @Override
    public Integer value3() {
        return getBookId();
    }

    @Override
    public ShoppingCartRecord value1(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public ShoppingCartRecord value2(String value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public ShoppingCartRecord value3(Integer value) {
        setBookId(value);
        return this;
    }

    @Override
    public ShoppingCartRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShoppingCartRecord
     */
    public ShoppingCartRecord() {
        super(ShoppingCart.SHOPPING_CART);
    }

    /**
     * Create a detached, initialised ShoppingCartRecord
     */
    public ShoppingCartRecord(Integer count, String customerId, Integer bookId) {
        super(ShoppingCart.SHOPPING_CART);

        setCount(count);
        setCustomerId(customerId);
        setBookId(bookId);
    }
}
