/*
 * This file is generated by jOOQ.
 */
package com.onlinebookstore.model;


import com.onlinebookstore.model.tables.Authorities;
import com.onlinebookstore.model.tables.Book;
import com.onlinebookstore.model.tables.BookDetail;
import com.onlinebookstore.model.tables.BookUser;
import com.onlinebookstore.model.tables.Customer;
import com.onlinebookstore.model.tables.PurchaseDetail;
import com.onlinebookstore.model.tables.PurchaseHistory;
import com.onlinebookstore.model.tables.ShoppingCart;
import com.onlinebookstore.model.tables.Users;
import com.onlinebookstore.model.tables.records.AuthoritiesRecord;
import com.onlinebookstore.model.tables.records.BookDetailRecord;
import com.onlinebookstore.model.tables.records.BookRecord;
import com.onlinebookstore.model.tables.records.BookUserRecord;
import com.onlinebookstore.model.tables.records.CustomerRecord;
import com.onlinebookstore.model.tables.records.PurchaseDetailRecord;
import com.onlinebookstore.model.tables.records.PurchaseHistoryRecord;
import com.onlinebookstore.model.tables.records.ShoppingCartRecord;
import com.onlinebookstore.model.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * onlinebookstore.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthoritiesRecord> KEY_AUTHORITIES_PRIMARY = Internal.createUniqueKey(Authorities.AUTHORITIES, DSL.name("KEY_authorities_PRIMARY"), new TableField[] { Authorities.AUTHORITIES.AUTHORITY, Authorities.AUTHORITIES.USERNAME }, true);
    public static final UniqueKey<BookRecord> KEY_BOOK_PRIMARY = Internal.createUniqueKey(Book.BOOK, DSL.name("KEY_book_PRIMARY"), new TableField[] { Book.BOOK.ID }, true);
    public static final UniqueKey<BookDetailRecord> KEY_BOOK_DETAIL_PRIMARY = Internal.createUniqueKey(BookDetail.BOOK_DETAIL, DSL.name("KEY_book_detail_PRIMARY"), new TableField[] { BookDetail.BOOK_DETAIL.ID }, true);
    public static final UniqueKey<BookUserRecord> KEY_BOOK_USER_PRIMARY = Internal.createUniqueKey(BookUser.BOOK_USER, DSL.name("KEY_book_user_PRIMARY"), new TableField[] { BookUser.BOOK_USER.CUSTOMER_ID, BookUser.BOOK_USER.BOOK_ID }, true);
    public static final UniqueKey<CustomerRecord> KEY_CUSTOMER_PRIMARY = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("KEY_customer_PRIMARY"), new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final UniqueKey<PurchaseDetailRecord> KEY_PURCHASE_DETAIL_PRIMARY = Internal.createUniqueKey(PurchaseDetail.PURCHASE_DETAIL, DSL.name("KEY_purchase_detail_PRIMARY"), new TableField[] { PurchaseDetail.PURCHASE_DETAIL.BOOK_ID, PurchaseDetail.PURCHASE_DETAIL.PURCHASE_HISTORY_ID }, true);
    public static final UniqueKey<PurchaseDetailRecord> KEY_PURCHASE_DETAIL_UK_363HI7OSOC0DY0HSN7D443XWG = Internal.createUniqueKey(PurchaseDetail.PURCHASE_DETAIL, DSL.name("KEY_purchase_detail_UK_363hi7osoc0dy0hsn7d443xwg"), new TableField[] { PurchaseDetail.PURCHASE_DETAIL.BOOK_ID }, true);
    public static final UniqueKey<PurchaseHistoryRecord> KEY_PURCHASE_HISTORY_PRIMARY = Internal.createUniqueKey(PurchaseHistory.PURCHASE_HISTORY, DSL.name("KEY_purchase_history_PRIMARY"), new TableField[] { PurchaseHistory.PURCHASE_HISTORY.ID }, true);
    public static final UniqueKey<ShoppingCartRecord> KEY_SHOPPING_CART_PRIMARY = Internal.createUniqueKey(ShoppingCart.SHOPPING_CART, DSL.name("KEY_shopping_cart_PRIMARY"), new TableField[] { ShoppingCart.SHOPPING_CART.BOOK_ID, ShoppingCart.SHOPPING_CART.CUSTOMER_ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthoritiesRecord, UsersRecord> FKHJUY9Y4FD8V5M3KLIG05KTOFG = Internal.createForeignKey(Authorities.AUTHORITIES, DSL.name("FKhjuy9y4fd8v5m3klig05ktofg"), new TableField[] { Authorities.AUTHORITIES.USERNAME }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.USERNAME }, true);
    public static final ForeignKey<BookRecord, BookDetailRecord> FKIO72XBATEQJGSTS3W2FWWR8L2 = Internal.createForeignKey(Book.BOOK, DSL.name("FKio72xbateqjgsts3w2fwwr8l2"), new TableField[] { Book.BOOK.BOOK_DETAIL_ID }, Keys.KEY_BOOK_DETAIL_PRIMARY, new TableField[] { BookDetail.BOOK_DETAIL.ID }, true);
    public static final ForeignKey<BookUserRecord, CustomerRecord> FK1WAA89OEWKQQU3NBJB419I4TG = Internal.createForeignKey(BookUser.BOOK_USER, DSL.name("FK1waa89oewkqqu3nbjb419i4tg"), new TableField[] { BookUser.BOOK_USER.CUSTOMER_ID }, Keys.KEY_CUSTOMER_PRIMARY, new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final ForeignKey<BookUserRecord, BookRecord> FKD5NHQ3RDFGY9KOEWDEX7BM7Q1 = Internal.createForeignKey(BookUser.BOOK_USER, DSL.name("FKd5nhq3rdfgy9koewdex7bm7q1"), new TableField[] { BookUser.BOOK_USER.BOOK_ID }, Keys.KEY_BOOK_PRIMARY, new TableField[] { Book.BOOK.ID }, true);
    public static final ForeignKey<PurchaseDetailRecord, BookRecord> FK1D4RVJV5V7SG625WM4X326JH8 = Internal.createForeignKey(PurchaseDetail.PURCHASE_DETAIL, DSL.name("FK1d4rvjv5v7sg625wm4x326jh8"), new TableField[] { PurchaseDetail.PURCHASE_DETAIL.BOOK_ID }, Keys.KEY_BOOK_PRIMARY, new TableField[] { Book.BOOK.ID }, true);
    public static final ForeignKey<PurchaseDetailRecord, PurchaseHistoryRecord> FKNKDDAJVP78N4H156EP0HKAHMS = Internal.createForeignKey(PurchaseDetail.PURCHASE_DETAIL, DSL.name("FKnkddajvp78n4h156ep0hkahms"), new TableField[] { PurchaseDetail.PURCHASE_DETAIL.PURCHASE_HISTORY_ID }, Keys.KEY_PURCHASE_HISTORY_PRIMARY, new TableField[] { PurchaseHistory.PURCHASE_HISTORY.ID }, true);
    public static final ForeignKey<PurchaseHistoryRecord, CustomerRecord> FKMPH04F5Q5B8VV86LF04C3VEPB = Internal.createForeignKey(PurchaseHistory.PURCHASE_HISTORY, DSL.name("FKmph04f5q5b8vv86lf04c3vepb"), new TableField[] { PurchaseHistory.PURCHASE_HISTORY.CUSTOMER_ID }, Keys.KEY_CUSTOMER_PRIMARY, new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final ForeignKey<ShoppingCartRecord, BookRecord> FK1SXGWV5NVEK5HCV0OR8302XGE = Internal.createForeignKey(ShoppingCart.SHOPPING_CART, DSL.name("FK1sxgwv5nvek5hcv0or8302xge"), new TableField[] { ShoppingCart.SHOPPING_CART.BOOK_ID }, Keys.KEY_BOOK_PRIMARY, new TableField[] { Book.BOOK.ID }, true);
    public static final ForeignKey<ShoppingCartRecord, CustomerRecord> FKH7DB6PDGS2OL2T6K73WN3XJ75 = Internal.createForeignKey(ShoppingCart.SHOPPING_CART, DSL.name("FKh7db6pdgs2ol2t6k73wn3xj75"), new TableField[] { ShoppingCart.SHOPPING_CART.CUSTOMER_ID }, Keys.KEY_CUSTOMER_PRIMARY, new TableField[] { Customer.CUSTOMER.ID }, true);
}
